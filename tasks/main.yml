---
- name: Include OS family specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Create the zookeeper group
  group: name=zookeeper state=present system=yes

- name: Create the zookeeper user
  user: name=zookeeper groups=zookeeper append=yes

- name: Check if the version of Zookeeper already exists
  stat: path=/opt/zookeeper-{{ zookeeper_version }}
  register: zookeeper_path

- name: Download Zookeeper
  get_url: url=http://archive.apache.org/dist/zookeeper/zookeeper-{{ zookeeper_version }}/zookeeper-{{ zookeeper_version }}.tar.gz dest=/tmp/zookeeper-{{ zookeeper_version }}.tar.gz
  when: zookeeper_path.stat.exists == False

- name: Extract Zookeeper
  unarchive: src=/tmp/zookeeper-{{ zookeeper_version }}.tar.gz dest=/opt copy=no owner=zookeeper group=zookeeper 
  when: zookeeper_path.stat.exists == False

- name: Create a symlink for /opt/zookeeper
  file: src=/opt/zookeeper-{{ zookeeper_version }} dest=/opt/zookeeper owner=zookeeper group=zookeeper state=link
  when: zookeeper_path.stat.exists == False

- name: Create the Zookeeper config file
  template: src=zoo.cfg.j2 dest=/opt/zookeeper/conf/zoo.cfg owner=zookeeper group=zookeeper mode=0644
  notify: restart zookeeper

- name: Create the Zookeeper data dir
  file: path={{ zookeeper_data_dir }} state=directory owner=zookeeper group=zookeeper mode=0755

- name: Create the Zookeeper the myid file
  template: src=myid.j2 dest={{ zookeeper_data_dir}}/myid owner=zookeeper group=zookeeper mode=0644
  notify: restart zookeeper

# RedHat 
- include: RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Ensure Zookeeper is started and enabled on boot
  service: name=zookeeper state=started enabled=yes


